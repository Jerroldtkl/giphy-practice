{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roldr\\\\OneDrive\\\\Desktop\\\\GA\\\\Unit 2\\\\Day6\\\\react-starter\\\\src\\\\Component\\\\Random.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Giphy from \"./Giphy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Random() {\n  _s();\n\n  const [random, setRandom] = useState();\n  const [error, setError] = useState(null);\n\n  const fetchPost = async () => {\n    const uri = `https://api.giphy.com/v1/gifs/search?api_key=iInrXoDTJnWBPH41u1Pnfc09eGy7z29l&q=feelings&limit=25&offset=0&rating=g&lang=en`;\n\n    try {\n      const res = await fetch(uri);\n      const data = await res.json();\n      console.log(data);\n      let randomNumber = Math.floor(Math.random() * data.data.length);\n      setRandom(data.data[randomNumber].images.fixed_height.url);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setRandom,\n      src: random,\n      alt: \"\",\n      type: \"image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: random,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \"Unsure on how you're feeling? Hit me!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Random, \"G16VU3A7hnaJuWRi6q0eKVcbWo4=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["C:/Users/roldr/OneDrive/Desktop/GA/Unit 2/Day6/react-starter/src/Component/Random.js"],"names":["React","useState","useEffect","Giphy","Random","random","setRandom","error","setError","fetchPost","uri","res","fetch","data","json","console","log","randomNumber","Math","floor","length","images","fixed_height","url","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAI,6HAAb;;AAEA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AAEA,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,UAAII,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACb,MAAL,KAAgBQ,IAAI,CAACA,IAAL,CAAUO,MAArC,CAAnB;AAEAd,MAAAA,SAAS,CAACO,IAAI,CAACA,IAAL,CAAUI,YAAV,EAAwBI,MAAxB,CAA+BC,YAA/B,CAA4CC,GAA7C,CAAT;AACD,KATD,CASE,OAAOC,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAR;AACD;AACF,GAfD;;AAiBAvB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEH,SAAjB;AAA4B,MAAA,GAAG,EAAED,MAAjC;AAAyC,MAAA,GAAG,EAAE,EAA9C;AAAkD,MAAA,IAAI,EAAC,OAAvD;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAkB,QAAA,GAAG,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjCQD,M;;KAAAA,M;AAmCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Giphy from \"./Giphy\";\r\n\r\nfunction Random() {\r\n  const [random, setRandom] = useState();\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPost = async () => {\r\n    const uri = `https://api.giphy.com/v1/gifs/search?api_key=iInrXoDTJnWBPH41u1Pnfc09eGy7z29l&q=feelings&limit=25&offset=0&rating=g&lang=en`;\r\n\r\n    try {\r\n      const res = await fetch(uri);\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n\r\n      let randomNumber = Math.floor(Math.random() * data.data.length);\r\n\r\n      setRandom(data.data[randomNumber].images.fixed_height.url);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={setRandom} src={random} alt={\"\"} type=\"image\">\r\n        <img src={random} alt={\"\"}></img>\r\n        Unsure on how you're feeling? Hit me!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Random;\r\n"]},"metadata":{},"sourceType":"module"}